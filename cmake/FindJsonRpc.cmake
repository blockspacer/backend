# Generates C++ sources from the jsonrpc .json stub files
#
# jsonrpc_generate_cpp (<SRCS> <HDRS> <DEST> [<ARGN>...])
#
#  HDRS - variable to define with autogenerated header files
#  DEST - directory where the source files will be created
#  ARGN - .proto files
#jsonrpcstub
function(JSONRPC_GENERATE_CPP HDRS DEST)
    if (NOT ARGN)
        message(SEND_ERROR "Error: JSONRPC_GENERATE_CPP() called without any json stub files")
        return()
    endif ()

    set(${HDRS})
    foreach (FIL ${ARGN})
        get_filename_component(ABS_FIL ${FIL} ABSOLUTE)
        get_filename_component(FIL_WE ${FIL} NAME_WE)

        list(APPEND ${HDRS} "${DEST}/${FIL_WE}.client.h")
        list(APPEND ${HDRS} "${DEST}/${FIL_WE}.server.h")

        add_custom_command(
            OUTPUT "${DEST}/${FIL_WE}.client.h" "${DEST}/${FIL_WE}.server.h"
            COMMAND ${CONAN_BIN_DIRS_LIBJSON-RPC-CPP}/jsonrpcstub
            ARGS --cpp-server=stubs::${FIL_WE}::AbstractStubServer
            --cpp-server-file=${DEST}/${FIL_WE}.server.h
            --cpp-client=stubs::${FIL_WE}::StubClient
            --cpp-client-file=${DEST}/${FIL_WE}.client.h
            ${ABS_FIL}
            DEPENDS ${ABS_FIL}
            COMMENT "Running C++ JsonRPC compiler on ${FIL}"
            VERBATIM)
    endforeach ()

    set_source_files_properties(${${HDRS}} PROPERTIES GENERATED TRUE)
    set(${HDRS} ${${HDRS}} PARENT_SCOPE)
endfunction()